-- Adel M. Abdallah, PhD Candidate, Utah State University, Nov 2017

--This is a Data Definition Language (DDL) script that
--generates a blank schema of the Water Management Data Model (WaMDaM)
--for PostgreSQL database

-- Generated by Adel Abdallah Nov, 2017 based on WaMDaM XML design named WaMDaM_DBWrench_Schema.xml DbWrench V4.04 @ http://www.dbwrench.com
-- WaMDaM All rights reserved. See BSD 3-Clause Licence @ https://github.com/WamdamProject/WaMDaM-software-ecosystem 

--Open PostgreSQL, click on Databases>> Postgers>>   at the left Object Browser panel
--Simply copy all this script and paste into the new window of "SQL query"
--Then click execute. The script should run successfully and create the 41 empty tables of WaMDaM"

--Adel has commented this part because it is not used in WaMDaM so far 
--CREATE EXTENSION if not exists postgis;
--CREATE EXTENSION if not exists postgis_topology;
--CREATE EXTENSION if not exists fuzzystrmatch;
--CREATE EXTENSION if not exists postgis_tiger_geoCoder;
-------------------------------------------------------------------------------

drop schema if exists WaMDaM cascade;

create schema WaMDaM;

/***************************************************************************/
/******************************* CREATE CVS ********************************/
/***************************************************************************/

create table WaMDaM.CV_AggregationStatistic (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_AttributeDataType (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_AttributeName (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	category varchar (255) NULL,
	definition varchar (5000) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_DescriptorValues (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	attributename varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_DualValueMeaning (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	booleanvalue bit varying (1) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_ElectronicFileFormat (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_ElevationDatum (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_InstanceName (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_MethodType (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_ObjectType (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_ObjectTypology (
	name varchar (50) NOT NULL primary key,
	term varchar (50) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_SeasonName (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table WaMDaM.CV_SpatialReference (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri varchar (5000) NULL
);
create table WaMDaM.CV_Units (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NOT NULL,
	unitsystem varchar (255) NULL,
	unitabbreviation char (50) NOT NULL,
	sourcevocabularyuri varchar (5000) NULL
);
/***************************************************************************/
/************************* CREATE DATASETSTRUCTURE *************************/
/***************************************************************************/

create table WaMDaM.AttributeCategory (
	attributecategoryid serial  NOT NULL primary key,
	attributecategoryname varchar (255) NOT NULL,
	categorydefinition text  NULL
);
create table WaMDaM.Attributes (
	attributeid serial  NOT NULL primary key,
	attributename varchar (255) NOT NULL,
	attributenamecv varchar (255) NULL,
	objecttypeid integer  NOT NULL,
	unitname varchar (255) NOT NULL,
	unitnamecv varchar (255) NULL,
	attributedatatypecv varchar (255) NOT NULL,
	attributecategoryid integer  NULL,
	modelinputoroutput char (50) NULL,
	attributedescription text  NULL
);
create table WaMDaM.Datasets (
	datasetid serial  NOT NULL primary key,
	datasetname varchar (255) NOT NULL,
	datasetacronym  varchar (255) NOT NULL,
	sourceid integer  NOT NULL,
	description text  NULL
);
create table WaMDaM.ObjectCategory (
	objectcategoryid serial  NOT NULL primary key,
	objectcategoryname varchar (255) NOT NULL,
	categorydefinition text  NULL
);
create table WaMDaM.ObjectTypes (
	objecttypeid serial  NOT NULL primary key,
	objecttype varchar (255) NOT NULL,
	objecttypecv varchar (255) NULL,
	objecttypologycv varchar (50) NOT NULL,
	icons bytea  NULL,
	description text  NULL,
	objectcategoryid integer  NULL,
	datasetid integer  NOT NULL
);
create table WaMDaM.WaMDaMVersion (
	versionnumber decimal (2) NOT NULL primary key
);
/***************************************************************************/
/**************************** CREATE DATAVALUES ****************************/
/***************************************************************************/

create table WaMDaM.DataValuesMapper (
	datavaluesmapperid serial  NOT NULL primary key
);
create table WaMDaM.DescriptorValues (
	descriptorvalueid serial  NOT NULL primary key,
	descriptorvalue varchar (500) NOT NULL,
	descriptorvaluecv varchar (255) NULL,
	datavaluesmapperid integer  NOT NULL
);
create table WaMDaM.DualValues (
	dualvalueid serial  NOT NULL primary key,
	dualvaluemeaningcv varchar (255) NOT NULL,
	datavaluesmapperid integer  NOT NULL
);
create table WaMDaM.ElectronicFiles (
	electronicfileid serial  NOT NULL primary key,
	electronicfilename varchar (255) NOT NULL,
	electronicfile bytea  NOT NULL,
	electronicfileformatcv varchar (255) NOT NULL,
	description text  NULL,
	datavaluesmapperid integer  NOT NULL
);
create table WaMDaM.MultiAttributeSeries (
	multiattributeseriesid serial  NOT NULL primary key,
	attributenameid integer  NOT NULL,
	datavaluesmapperid integer  NOT NULL
);
create table WaMDaM.MultiAttributeSeriesValues (
	multiattributeseriesvalueid serial  NOT NULL primary key,
	multiattributeseriesid integer  NOT NULL,
	value varchar (255) NOT NULL,
	valueorder integer  NOT NULL
);
create table WaMDaM.NumericValues (
	numericvalueid serial  NOT NULL primary key,
	numericvalue double precision  NOT NULL,
	datavaluesmapperid integer  NOT NULL
);
create table WaMDaM.SeasonalNumericValues (
	seasonalnumericvalueid serial  NOT NULL primary key,
	seasonname varchar (255) NOT NULL,
	seasonorder integer  NOT NULL,
	seasonnamecv varchar (255) NULL,
	seasonnumericvalue double precision  NOT NULL,
	datavaluesmapperid integer  NOT NULL
);
create table WaMDaM.TimeSeries (
	timeseriesid serial  NOT NULL primary key,
	waterorcalendaryear varchar (50) NOT NULL,
	aggregationstatisticv varchar (255) NOT NULL,
	aggregationinterval double precision  NOT NULL,
	intervaltimeunitcv varchar (255) NOT NULL,
	begindatetime timestamp  NULL,
	enddatetime timestamp  NULL,
	isregular boolean  NULL,
	nodatavalue varchar (50) NULL,
	description text  NULL,
	datavaluesmapperid integer  NOT NULL
);
create table WaMDaM.TimeSeriesValues (
	timeseriesvalueid serial  NOT NULL primary key,
	timeseriesid integer  NOT NULL,
	datetimestamp timestamp  NOT NULL,
	value double precision  NOT NULL
);
/***************************************************************************/
/***************************** CREATE METADATA *****************************/
/***************************************************************************/

create table WaMDaM.Methods (
	methodid serial  NOT NULL primary key,
	methodname varchar (255) NOT NULL,
	methodwebpage varchar (255) NULL,
	methodcitation varchar (500) NULL,
	methodtypecv varchar (255) NOT NULL,
	personid integer  NOT NULL,
	description text  NULL
);
create table WaMDaM.Organizations (
	organizationid serial  NOT NULL primary key,
	organizationname varchar (255) NOT NULL,
	organizationtype varchar (255) NULL,
	organizationwebpage varchar (255) NULL,
	description text  NULL
);
create table WaMDaM.People (
	personid serial  NOT NULL primary key,
	personname varchar (255) NOT NULL,
	address varchar (255) NULL,
	email varchar (255) NULL,
	phone varchar (50) NULL,
	personwebpage varchar (255) NULL,
	position varchar (255) NULL,
	organizationid integer  NOT NULL
);
create table WaMDaM.Sources (
	sourceid serial  NOT NULL primary key,
	sourcename varchar (500) NOT NULL,
	sourcewebpage varchar (500) NULL,
	sourcecitation varchar (500) NULL,
	personid integer  NOT NULL,
	description text  NULL
);
/***************************************************************************/
/***************************** CREATE NETWORKS *****************************/
/***************************************************************************/

create table WaMDaM.Connections (
	connectivityid serial  NOT NULL primary key,
	linkinstanceid integer  NOT NULL,
	startnodeinstanceid integer  NOT NULL,
	endnodeinstanceid integer  NOT NULL
);
create table WaMDaM.InstanceCategory (
	instancecategoryid serial  NOT NULL primary key,
	instancecategory varchar (255) NOT NULL,
	categorydefinition text  NULL
);
create table WaMDaM.Instances (
	instanceid serial  NOT NULL primary key,
	instancename varchar (255) NOT NULL,
	instancenamecv varchar (255) NULL,
	longitude_x double precision  NULL,
	latitude_y double precision  NULL,
	description text  NULL,
	instancecategoryid integer  NULL
);
create table WaMDaM.Mapping (
	mappingid serial  NOT NULL primary key,
	attributeid integer  NOT NULL,
	instanceid integer  NOT NULL,
	sourceid integer  NOT NULL,
	methodid integer  NOT NULL,
	datavaluesmapperid integer  NULL
);
create table WaMDaM.MasterNetworks (
	masternetworkid serial  NOT NULL primary key,
	masternetworkname varchar (255) NOT NULL,
	spatialreferencenamecv varchar (255) NOT NULL,
	verticaldatumcv varchar (255) NOT NULL,
	description text  NULL
);
create table WaMDaM.ScenarioMapping (
	scenariomappingid serial  NOT NULL primary key,
	scenarioid integer  NOT NULL,
	mappingid integer  NOT NULL
);
create table WaMDaM.Scenarios (
	scenarioid serial  NOT NULL primary key,
	scenarioname varchar (255) NOT NULL,
	scenariostartdate varchar (255) NULL,
	scenarioenddate timestamp  NULL,
	timestepvalue integer  NULL,
	timestepunitcv varchar (255) NULL,
	masternetworkid integer  NOT NULL,
	description text  NULL
);

alter table WaMDaM.Attributes add constraint fk_Attributes_CV_AttributeName
foreign key (AttributeNameCV) References WaMDaM.CV_AttributeName (Name)
on update no Action on delete cascade;

alter table WaMDaM.Attributes add constraint fk_Attributes_CV_AttributeType
foreign key (AttributeDataTypeCV) References WaMDaM.CV_AttributeDataType (Name)
on update no Action on delete cascade;

alter table WaMDaM.Attributes add constraint fk_Attributes_CV_Units
foreign key (UnitNameCV) References WaMDaM.CV_Units (Name)
on update no Action on delete cascade;

alter table WaMDaM.Attributes add constraint fk_Attributes_ObjectTypes
foreign key (ObjectTypeID) References WaMDaM.ObjectTypes (ObjectTypeID)
on update no Action on delete cascade;

alter table WaMDaM.Attributes add constraint fk_ObjectAttributes_AttributeCategory
foreign key (AttributeCategoryID) References WaMDaM.AttributeCategory (AttributeCategoryID)
on update no Action on delete cascade;

alter table WaMDaM.Datasets add constraint fk_Datasets_Sources
foreign key (SourceID) References WaMDaM.Sources (SourceID)
on update no Action on delete cascade;

alter table WaMDaM.ObjectTypes add constraint fk_ObjectTypes_CV_ObjectTopology
foreign key (ObjectTypologyCV) References WaMDaM.CV_ObjectTypology (Name)
on update no Action on delete cascade;

alter table WaMDaM.ObjectTypes add constraint fk_ObjectTypes_CV_ObjectTypes
foreign key (ObjectTypeCV) References WaMDaM.CV_ObjectType (Name)
on update no Action on delete cascade;

alter table WaMDaM.ObjectTypes add constraint fk_ObjectTypes_Datasets
foreign key (DatasetID) References WaMDaM.Datasets (DatasetID)
on update no Action on delete cascade;

alter table WaMDaM.ObjectTypes add constraint fk_ObjectTypes_ObjectCategory
foreign key (ObjectCategoryID) References WaMDaM.ObjectCategory (ObjectCategoryID)
on update no Action on delete cascade;

alter table WaMDaM.DescriptorValues add constraint fk_DescriptorValues_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.DescriptorValues add constraint fk_TextControlled_CV_TextControlledValue
foreign key (DescriptorValueCV) References WaMDaM.CV_DescriptorValues (Name)
on update no Action on delete cascade;

alter table WaMDaM.DualValues add constraint fk_BooleanValues_CV_BooleanValueMeaning
foreign key (DualValueMeaningCV) References WaMDaM.CV_DualValueMeaning (Name)
on update no Action on delete cascade;

alter table WaMDaM.DualValues add constraint fk_DualValues_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.ElectronicFiles add constraint fk_ElectronicFiles_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.ElectronicFiles add constraint fk_Files_CV_FileFormat
foreign key (ElectronicFileFormatCV) References WaMDaM.CV_ElectronicFileFormat (Name)
on update no Action on delete cascade;

alter table WaMDaM.MultiAttributeSeries add constraint fk_MultiAttributeSeries_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.MultiAttributeSeries add constraint fk_MultiColumnArray_DataValuesMapper
foreign key (AttributeNameID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.MultiAttributeSeriesValues add constraint fk_MultiAttributeSeriesValues_MultiAttributeSeries
foreign key (MultiAttributeSeriesID) References WaMDaM.MultiAttributeSeries (MultiAttributeSeriesID)
on update no Action on delete cascade;

alter table WaMDaM.NumericValues add constraint fk_NumericValues_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.SeasonalNumericValues add constraint fk_SeasonalNumericValues_CV_SeasonName
foreign key (SeasonNameCV) References WaMDaM.CV_SeasonName (Name)
on update no Action on delete cascade;

alter table WaMDaM.SeasonalNumericValues add constraint fk_SeasonalNumericValues_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.TimeSeries add constraint fk_TimeSeries_CV_AggregationStatistic
foreign key (AggregationStatistiCV) References WaMDaM.CV_AggregationStatistic (Name)
on update no Action on delete cascade;

alter table WaMDaM.TimeSeries add constraint fk_TimeSeries_CV_Units
foreign key (IntervalTimeUnitCV) References WaMDaM.CV_Units (Name)
on update no Action on delete cascade;

alter table WaMDaM.TimeSeries add constraint fk_TimeSeries_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.TimeSeriesValues add constraint fk_TimeSeriesValues_TimeSeries
foreign key (TimeSeriesID) References WaMDaM.TimeSeries (TimeSeriesID)
on update no Action on delete cascade;

alter table WaMDaM.Methods add constraint fk_Methods_CV_MethodType
foreign key (MethodTypeCV) References WaMDaM.CV_MethodType (Name)
on update no Action on delete cascade;

alter table WaMDaM.Methods add constraint fk_Methods_People
foreign key (PersonID) References WaMDaM.People (PersonID)
on update no Action on delete cascade;

alter table WaMDaM.People add constraint fk_People_Organizations
foreign key (OrganizationID) References WaMDaM.Organizations (OrganizationID)
on update no Action on delete cascade;

alter table WaMDaM.Sources add constraint fk_Sources_People
foreign key (PersonID) References WaMDaM.People (PersonID)
on update no Action on delete cascade;

alter table WaMDaM.Connections add constraint fk_Connections_Instances
foreign key (EndNodeInstanceID) References WaMDaM.Instances (InstanceID)
on update no Action on delete cascade;

alter table WaMDaM.Connections add constraint fk_Connections_Instances_Link
foreign key (LinkInstanceID) References WaMDaM.Instances (InstanceID)
on update no Action on delete cascade;

alter table WaMDaM.Connections add constraint fk_Connections_Instances_startNode
foreign key (StartNodeInstanceID) References WaMDaM.Instances (InstanceID)
on update no Action on delete cascade;

alter table WaMDaM.Instances add constraint fk_Instances_CV_InstanceName
foreign key (InstanceNameCV) References WaMDaM.CV_InstanceName (Name)
on update no Action on delete cascade;

alter table WaMDaM.Instances add constraint fk_Instances_InstanceCategory
foreign key (InstanceCategoryID) References WaMDaM.InstanceCategory (InstanceCategoryID)
on update no Action on delete cascade;

alter table WaMDaM.Mapping add constraint fk_Mapping_Attributes
foreign key (AttributeID) References WaMDaM.Attributes (AttributeID)
on update no Action on delete cascade;

alter table WaMDaM.Mapping add constraint fk_Mapping_DataValuesMapper
foreign key (DataValuesMapperID) References WaMDaM.DataValuesMapper (DataValuesMapperID)
on update no Action on delete cascade;

alter table WaMDaM.Mapping add constraint fk_Mapping_Instances
foreign key (InstanceID) References WaMDaM.Instances (InstanceID)
on update no Action on delete cascade;

alter table WaMDaM.Mapping add constraint fk_Mapping_Methods
foreign key (MethodID) References WaMDaM.Methods (MethodID)
on update no Action on delete cascade;

alter table WaMDaM.Mapping add constraint fk_Mapping_Sources
foreign key (SourceID) References WaMDaM.Sources (SourceID)
on update no Action on delete cascade;

alter table WaMDaM.MasterNetworks add constraint fk_MasterNetworks_CV_SpatialReference
foreign key (SpatialReferenceNameCV) References WaMDaM.CV_SpatialReference (Name)
on update no Action on delete cascade;

alter table WaMDaM.MasterNetworks add constraint fk_MasterNetworks_CV_VerticalDatum
foreign key (VerticalDatumCV) References WaMDaM.CV_ElevationDatum (Name)
on update no Action on delete cascade;

alter table WaMDaM.ScenarioMapping add constraint fk_ScenarioMapping_Mapping
foreign key (MappingID) References WaMDaM.Mapping (MappingID)
on update no Action on delete cascade;

alter table WaMDaM.ScenarioMapping add constraint fk_ScenarioMapping_Scenarios
foreign key (ScenarioID) References WaMDaM.Scenarios (ScenarioID)
on update no Action on delete cascade;

alter table WaMDaM.Scenarios add constraint fk_Scenarios_CV_Units
foreign key (TimeStepUnitCV) References WaMDaM.CV_Units (Name)
on update no Action on delete cascade;

alter table WaMDaM.Scenarios add constraint fk_Scenarios_MasterNetworks
foreign key (MasterNetworkID) References WaMDaM.MasterNetworks (MasterNetworkID)
on update no Action on delete cascade;